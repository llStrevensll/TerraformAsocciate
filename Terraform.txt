https://www.hashicorp.com/blog/infrastructure-as-code-in-a-private-or-public-cloud

Terraform IaC
Infrastructure as Code or IaC is the management and provisioning if IT infrastructure using machine-readable configuration files.

==============================================
export aws credentials

-------------------

terraform init
This command performs several different initialization steps in order to prepare a working directory for use.

Initialize terraform, download everything that we need in order to actually run this configuration.
-------------------
terraform validate
command validates the configuration files in a directory, referring only to the configuration and not accessing any remote services such as remote state, provider APIs, etc.

--------------------
terraform plan
command is used to create an execution plan, terraform performs a refresh, unless explicitly disabled, and then determines what actions are necessary to achieve the desired state specified in the configuration files.

This command is a convenient way to check whether the execution plan for a set of changes matches your expectations without making any changes to real resources or to the state.
--------------------
Provider
https://www.terraform.io/docs/providers/index.html
https://registry.terraform.io/providers/hashicorp/aws/latest/docs
provider "aws" {
  region = "us-east-1"
}
---
https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance
resource block
resource "provider_type" "name" {
  config
}

----------------------
terraform apply
Command used to apply the changes required to reach the desired state of the configuration, or the pre-determined set of actions generated by a "terraform plan" execution plan

terraform destroy
Command is used to destroy the Terraform-managed infrastructure

==============================================
Resource
Sintax names
https://www.terraform.io/docs/configuration/resources.html

==============================================
Variables
https://www.terraform.io/docs/configuration/variables.html
How to see environment variables
env --


---
describe image aws
aws ec2 describe-images --owners amazon --image-ids <image-id>

---
Resource
https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance

EBS Volume
https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume

Volume attachment
https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/volume_attachment


Cloud Watch
https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_metric_alarm
AWS:
https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html


=====================
https://www.terraform.io/docs/commands/

terraform state list
The terraform state list command is used to list resources within a Terraform state.
--
terraform state show <resource>
ej: terraform state show aws_instance.test_instance

The terraform state show command is used to show the attributes of a single resource in the Terraform state.
--
terraform taint <resource>
The terraform taint command manually marks a Terraform-managed resource as tainted, forcing it to be destroyed and recreated on the next apply.
--
terraform state rm <resource>
The terraform state rm command is used to remove items from the Terraform state. This command can remove single resources, single instances of a resource, entire modules, and more.

--
terraform state mv <resource> <new_resource>
The terraform state mv command is used to move items in a Terraform state. This command can move single resources, single instances of a resource, entire modules, and more. This command can also move items to a completely different state file, enabling efficient refactoring.

--
terraform refresh
The terraform refresh command is used to reconcile the state Terraform knows about (via its state file) with the real-world infrastructure. This can be used to detect any drift from the last-known state, and to update the state file.

--
terraform validate
The terraform validate command validates the configuration files in a directory, referring only to the configuration and not accessing any remote services such as remote state, provider APIs, etc.

--
terraform fmt
The terraform fmt command is used to rewrite Terraform configuration files to a canonical format and style. This command applies a subset of the Terraform language style conventions, along with other minor adjustments for readability.

